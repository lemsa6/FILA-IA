# Nginx ultra-otimizado com Brotli e HTTP/2
FROM nginx:alpine

# Instalar dependências para compilar módulos
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    libc-dev \
    make \
    openssl-dev \
    pcre-dev \
    zlib-dev \
    linux-headers \
    curl \
    gnupg \
    libxslt-dev \
    gd-dev \
    geoip-dev \
    git

# Instalar módulo Brotli
RUN cd /tmp \
    && git clone --recursive https://github.com/google/ngx_brotli.git \
    && cd ngx_brotli \
    && git submodule update --init

# Baixar código fonte do Nginx para compilar com Brotli
RUN NGINX_VERSION=$(nginx -v 2>&1 | grep -o '[0-9.]*') \
    && cd /tmp \
    && curl -fSL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -o nginx.tar.gz \
    && tar -xzf nginx.tar.gz \
    && cd nginx-${NGINX_VERSION} \
    && ./configure \
        --prefix=/etc/nginx \
        --sbin-path=/usr/sbin/nginx \
        --modules-path=/usr/lib/nginx/modules \
        --conf-path=/etc/nginx/nginx.conf \
        --error-log-path=/var/log/nginx/error.log \
        --http-log-path=/var/log/nginx/access.log \
        --pid-path=/var/run/nginx.pid \
        --lock-path=/var/run/nginx.lock \
        --http-client-body-temp-path=/var/cache/nginx/client_temp \
        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
        --with-http_ssl_module \
        --with-http_realip_module \
        --with-http_addition_module \
        --with-http_sub_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_mp4_module \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_random_index_module \
        --with-http_secure_link_module \
        --with-http_stub_status_module \
        --with-http_auth_request_module \
        --with-http_xslt_module=dynamic \
        --with-http_image_filter_module=dynamic \
        --with-http_geoip_module=dynamic \
        --with-threads \
        --with-stream \
        --with-stream_ssl_module \
        --with-stream_ssl_preread_module \
        --with-stream_realip_module \
        --with-stream_geoip_module=dynamic \
        --with-http_slice_module \
        --with-http_v2_module \
        --add-dynamic-module=/tmp/ngx_brotli \
    && make \
    && make install

# Configurar módulo Brotli
RUN echo "load_module modules/ngx_http_brotli_filter_module.so;" > /etc/nginx/modules/brotli.conf \
    && echo "load_module modules/ngx_http_brotli_static_module.so;" >> /etc/nginx/modules/brotli.conf

# Limpar dependências de build
RUN apk del .build-deps \
    && rm -rf /tmp/*

# Configuração otimizada do Nginx
COPY nginx.conf /etc/nginx/nginx.conf
COPY default.conf /etc/nginx/conf.d/default.conf

# Script de otimização de assets
COPY optimize-assets.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/optimize-assets.sh

EXPOSE 80

CMD ["sh", "-c", "/usr/local/bin/optimize-assets.sh & nginx -g 'daemon off;'"]
